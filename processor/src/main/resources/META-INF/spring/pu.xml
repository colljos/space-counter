<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-sla="http://www.openspaces.org/schema/sla"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/10.2/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/10.2/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/10.2/remoting/openspaces-remoting.xsd
       http://www.openspaces.org/schema/sla http://www.openspaces.org/schema/10.2/sla/openspaces-sla.xsd">

<!-- ========================================================================================================== -->

    <context:annotation-config />
	<context:component-scan base-package="org.openspaces.example.counter.processor" />
	
	<!-- Enable support for @Polling annotation -->
	<os-events:annotation-support />
	
    <!--
        A bean representing a space (an IJSpace implementation).
    -->
    <os-core:embedded-space id="space" name="processorSpace" />
 
    <!--
        Defines a distributed transaction manager (will be used for transactional operations with the space).
    -->
    <os-core:distributed-tx-manager id="transactionManager"/>

    <!--
        A wrapper bean to the space to provide OpenSpaces simplified space API (built on top of IJSpace/JavaSpace).
    -->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager"/>
    
    <os-core:giga-space id="clusteredGigaSpace" space="space" tx-manager="transactionManager" clustered="true"/>

    <!--
        The processor bean
    -->
    <bean id="counterProcessor" class="org.openspaces.example.counter.processor.Processor"/>

    <!--
        A Polling Container bean that performs repeated take operations from the space of objects matching a defined template.
        (The take operations are by default blocking, which means a single take operation is waiting until a match is found)   
        The template here instructs the polling container to take objects of type Message with their "info" attribute set to "Hello ".
        When a match is found, the object is taken and passed to a listener bean - here the listener is the previously defined Processor bean.
        This bean has the method processMessage(), which is invoked on the taken object, retuning a processed object.
        After the object is processed, it is written back to the space by the Polling Container. 
    -->
    <os-events:polling-container id="counterProcessorPollingEventContainer" giga-space="gigaSpace">
    <os-events:tx-support tx-manager="transactionManager"/>
    <os-core:template>
        <bean class="org.openspaces.example.counter.common.Message"/>
    </os-core:template>
    <os-events:listener>
        <os-events:annotation-adapter>
            <os-events:delegate ref="counterProcessor"/>
        </os-events:annotation-adapter>
    </os-events:listener>
</os-events:polling-container>
    
</beans>
