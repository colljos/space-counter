<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-sla="http://www.openspaces.org/schema/sla"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/8.0/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/8.0/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/8.0/remoting/openspaces-remoting.xsd
       http://www.openspaces.org/schema/sla http://www.openspaces.org/schema/8.0/sla/openspaces-sla.xsd">

    <context:component-scan base-package="org.openspaces.bigdata.feeder" />
    <!--
        A bean representing a space (an IJSpace implementation).
        Note, we perform a lookup on the space since we are working against a remote space.
    -->
    <!-- 
    <os-core:space id="space" url="jini://*/*/processorSpace" />
     -->
    <os-core:space id="space" url="jini://colljos-DELLXPS:4174/*/processorSpace?locators=colljos-DELLXPS:4174" />
        
    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space"/>
	
    <bean name="taskScheduler" class="org.openspaces.example.counter.feeder.TaskScheduler">
        <property name="delayInMs" value="1000"/>
    </bean>	
    
	<bean class="org.openspaces.example.counter.feeder.ListBasedFeederTask" />
	
	<bean id="premiershipTeamList" class="java.util.LinkedList">
		<constructor-arg>
			<list>
				<value>Arsenal</value>
				<value>Aston Villa</value>
				<value>Bournemouth</value>
				<value>Chelsea</value>
				<value>Crystal Palace</value>
				<value>Everton</value>
				<value>Leicester City</value>
				<value>Liverpool</value>
				<value>Manchester City</value>
				<value>Manchester United</value>
				<value>Newcastle United</value>
				<value>Norwich City</value>
				<value>Southampton</value>
				<value>Stoke City</value>
				<value>Sunderland</value>
				<value>Swansea City</value>
				<value>Tottenham Hotspur</value>
				<value>Watford</value>
				<value>West Bromich Albion</value>
				<value>West Ham United</value>
			</list>
		</constructor-arg>
	</bean>
    
</beans>